import React from "react";
import { Workout, WorkoutType } from "@/types";
import { format } from "date-fns";
import { ModIcon } from "../Icons";

const WorkoutImage: React.FC<{ workoutType: WorkoutType }> = ({
  workoutType,
}) => {
  if (workoutType === "strength")
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="17"
        height="16"
        viewBox="0 0 17 16"
        fill="none"
      >
        <path
          d="M1.11447 0.660896V1.97085C1.11583 1.97899 1.12232 1.98467 1.12232 1.9928C1.12232 2.00094 1.11583 2.00654 1.11447 2.01495V3.46516C1.20135 3.54127 1.49843 3.61868 1.8046 3.66708V0.319335C1.37727 0.38828 1.11447 0.564097 1.11447 0.660896Z"
          fill="#359CEF"
        />
        <path
          d="M2.03621 3.69763C2.21024 3.72723 2.38808 3.72433 2.56109 3.68908V0.427179C2.52667 0.353546 2.33343 0.286382 2.03621 0.298379V3.69763Z"
          fill="#359CEF"
        />
        <path
          d="M14.8533 0.325684C14.7955 0.352296 14.7661 0.38267 14.7661 0.416039V1.97693C14.7661 1.98286 14.7716 1.98662 14.7716 1.99269C14.7716 1.99875 14.7668 2.00258 14.7661 2.00851V3.64461C14.7995 3.68597 15.0619 3.73492 15.4562 3.67632V0.289191C15.3706 0.276038 15.2841 0.268987 15.1976 0.268184C15.0802 0.263711 14.9631 0.283264 14.8533 0.325684Z"
          fill="#359CEF"
        />
        <path
          d="M15.6878 0.336706V3.6287C16.0464 3.54238 16.2013 3.42557 16.2133 3.38214V0.674294C16.2128 0.559018 15.9883 0.418613 15.6878 0.336706Z"
          fill="#359CEF"
        />
        <path
          d="M16.5505 1.85892H16.4443V0.674462C16.4443 0.234868 15.7199 0.000968188 15.1974 0.000968188C15.0503 -0.00387492 14.9037 0.0221097 14.7669 0.0772521C14.6987 0.102771 14.6399 0.148841 14.5983 0.209352C14.5567 0.269863 14.5343 0.341928 14.534 0.415783V1.85892H2.79314V0.402115C2.79311 0.390059 2.79157 0.378085 2.78854 0.366431C2.70722 0.0301169 2.21375 -0.0150044 1.78236 0.0517344C1.34731 0.120679 0.883122 0.316624 0.883122 0.660659V1.85838H0.783096C0.750985 1.86231 0.721405 1.87806 0.699946 1.90268C0.678486 1.9273 0.666626 1.95905 0.666626 1.99196C0.666626 2.02487 0.678486 2.05668 0.699946 2.08131C0.721405 2.10593 0.750985 2.12167 0.783096 2.12561H0.883122V3.49805C0.883122 3.64173 1.00671 3.73727 1.31138 3.82897C1.63543 3.91778 1.96845 3.96832 2.30386 3.97965C2.53047 3.97965 2.72062 3.93995 2.77822 3.82109C2.78772 3.80071 2.7927 3.77841 2.79274 3.75585V2.12574H14.534V3.64422C14.534 3.79259 14.6355 3.96962 15.1195 3.96962C15.4593 3.96962 16.444 3.82596 16.444 3.38554V2.12574H16.5502C16.5823 2.12181 16.6118 2.10606 16.6333 2.08144C16.6548 2.05682 16.6666 2.025 16.6666 1.99209C16.6666 1.95919 16.6548 1.92744 16.6333 1.90282C16.6118 1.8782 16.5823 1.86245 16.5502 1.85851L16.5505 1.85892ZM1.80377 3.66711C1.49761 3.6183 1.20066 3.5413 1.11365 3.46519V2.01546C1.11514 2.00691 1.12205 2.00166 1.12205 1.99297C1.12205 1.98428 1.11514 1.97915 1.11365 1.97115V0.661198C1.11365 0.564675 1.37617 0.388585 1.80377 0.319503V3.66711ZM2.5603 3.68886C2.38748 3.72458 2.20964 3.72748 2.03578 3.69741V0.298563C2.33273 0.286153 2.52587 0.353747 2.5603 0.426691V3.68886ZM15.4558 3.67647C15.0611 3.73466 14.7986 3.68585 14.7656 3.64462V2.00879C14.7665 2.00259 14.7711 1.99877 14.7711 1.99257C14.7711 1.98636 14.7665 1.98315 14.7656 1.97694V0.415918C14.7656 0.382548 14.7947 0.352168 14.8528 0.325831C14.9626 0.283361 15.0797 0.263807 15.197 0.268332C15.2837 0.268995 15.3701 0.276047 15.4558 0.289339V3.67647ZM16.2124 3.38291C16.2009 3.42566 16.046 3.54282 15.6871 3.629V0.336604C15.988 0.419338 16.2124 0.558772 16.2124 0.674462V3.38291Z"
          fill="#359CEF"
        />
        <path
          d="M12.35 1.99058C12.3339 2.04022 12.3054 2.13536 12.2687 2.25808C12.0993 2.82481 11.751 4.25062 11.751 4.25062L10.7928 6.24033C10.78 6.27248 10.77 6.30573 10.7629 6.33964C10.6315 6.78365 10.4996 7.2281 10.3672 7.67303C10.2994 7.89917 10.2113 8.13086 10.1626 8.36389C10.1182 8.60266 10.1118 8.84712 10.1436 9.08795C10.1978 9.56064 10.3675 10.023 10.4484 10.4937C10.553 11.0484 10.6111 11.6113 10.6218 12.176C10.6382 12.3235 10.649 12.4724 10.6545 12.62L10.7358 14.727C10.7459 14.8826 10.6957 15.036 10.5958 15.1543C10.496 15.2726 10.3546 15.3465 10.2019 15.3599C10.1133 15.3634 10.025 15.3463 9.94394 15.3097C9.86287 15.2731 9.79113 15.2181 9.73426 15.1489C9.72477 15.1351 9.71529 15.12 9.7058 15.1034C9.60538 14.9228 9.63397 14.687 9.63804 14.4801C9.64617 14.0775 9.65387 13.6744 9.6611 13.2708C9.66775 12.9393 9.64778 12.6077 9.60144 12.2794L9.28568 10.0262C9.26627 9.93768 9.26729 9.84577 9.28866 9.75767C8.97768 9.83981 8.65134 9.84067 8.33995 9.76016C8.35488 9.84812 8.35626 9.93786 8.34402 10.0262L8.02823 12.2794C7.9821 12.6077 7.96172 12.9392 7.96725 13.2708C7.97538 13.6749 7.98215 14.0775 7.99163 14.4801C7.9957 14.687 8.02416 14.9228 7.92251 15.1034C7.91463 15.1196 7.9051 15.1348 7.89406 15.1489C7.83736 15.2183 7.76565 15.2734 7.68454 15.31C7.60344 15.3466 7.51513 15.3637 7.42649 15.3599C7.27401 15.3461 7.13286 15.2722 7.0333 15.1539C6.93374 15.0356 6.88367 14.8824 6.89383 14.727C6.93544 13.6287 6.97218 12.5292 7.07261 11.4345C7.1195 10.9243 7.14416 10.3805 7.28335 9.88701C7.41671 9.41446 7.59589 8.93788 7.52731 8.43775C7.47852 8.07096 7.31723 7.6849 7.21558 7.33052C7.11123 6.96649 7.00554 6.60382 6.90118 6.23979L5.39408 2.25754L5.35206 2.15547C5.33701 2.11962 5.39816 2.05485 5.47405 1.99004H6.29401C6.3306 2.07967 6.36853 2.43541 6.40512 2.52504C6.6423 3.09728 6.87993 3.66998 7.11801 4.24314C7.26302 4.59339 7.40939 4.94364 7.55441 5.29388C7.58444 5.39184 7.62395 5.4865 7.67233 5.57653C7.81735 5.79026 8.28356 5.85092 8.51261 5.87574C8.77215 5.89984 9.03311 5.90404 9.29326 5.8882C9.51417 5.87717 9.73645 5.7503 9.94503 5.67032L11.2544 2.25754L11.3655 1.99004L12.35 1.99058Z"
          fill="#359CEF"
        />
        <path
          d="M7.94746 3.85332L8.42764 4.82878C8.47491 4.93025 8.55298 5.0136 8.65032 5.06652C8.8116 5.14925 9.06816 5.16457 9.35887 4.74731C9.38228 4.71293 9.4017 4.67588 9.41674 4.63696L9.74716 3.80686C9.81 3.65706 9.82535 3.49108 9.79107 3.33199C9.72995 3.07386 9.51079 2.76377 8.82013 2.72185C8.76815 2.72 8.71624 2.72746 8.66683 2.744C8.48747 2.77175 8.32014 2.8528 8.18583 2.97689C8.05152 3.10099 7.95621 3.26262 7.91183 3.4416C7.87172 3.57845 7.88446 3.7257 7.94746 3.85332Z"
          fill="#359CEF"
        />
      </svg>
    );
  if (workoutType === "endurance" || workoutType === "race")
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
      >
        <path
          d="M10.3772 7.78867C10.0836 7.65755 9.76466 7.5941 9.44358 7.603C9.12251 7.6119 8.80748 7.69288 8.52155 7.84006C8.51915 7.84131 8.51702 7.84306 8.51531 7.84517C8.5136 7.84728 8.51234 7.84971 8.51161 7.85233C8.51087 7.85495 8.51068 7.85771 8.51104 7.86041C8.5114 7.8631 8.51231 7.86569 8.51371 7.86802C8.75858 8.35954 8.92805 8.88554 9.01636 9.4281C9.01722 9.43229 9.01936 9.43609 9.02247 9.43902C9.02559 9.44195 9.02953 9.44384 9.03375 9.44442C9.03797 9.445 9.04227 9.44426 9.04606 9.44228C9.04984 9.44031 9.05292 9.43722 9.05488 9.43341C9.42986 8.68733 9.87302 8.14765 10.3794 7.82449C10.3824 7.82248 10.3849 7.81967 10.3865 7.81642C10.3881 7.81316 10.3888 7.80954 10.3886 7.80591C10.3883 7.80228 10.3872 7.79877 10.3852 7.79574C10.3832 7.79271 10.3804 7.79029 10.3772 7.78867Z"
          fill="#359CEF"
        />
        <path
          d="M7.02555 10.0129C7.18518 10.6761 7.233 11.3616 7.16701 12.0408C7.14131 12.1763 7.14334 12.3156 7.17298 12.4503C7.19601 12.4628 7.22235 12.4678 7.24832 12.4646C7.31784 12.4584 7.38525 12.4374 7.44608 12.403C7.50692 12.3686 7.55977 12.3215 7.60114 12.265C8.00544 11.8107 8.2819 10.7133 8.19327 9.91634C8.12321 9.29164 7.80533 8.54316 7.57319 7.99628C7.44922 7.74916 7.35614 7.48757 7.29604 7.21746C7.28923 7.11357 7.36064 6.99219 7.52785 6.82315C8.00646 6.34022 9.46088 5.35809 9.84591 5.35809C9.85035 5.35809 9.85477 5.35809 9.8587 5.35809C10.0854 5.37232 10.2925 5.55401 10.5541 5.78408C10.817 6.02773 11.1044 6.24308 11.4118 6.42663C12.1265 6.83515 13.3424 7.2298 13.6042 7.07654C13.6111 7.07376 13.6169 7.06874 13.6206 7.06226C13.6242 7.05579 13.6256 7.04825 13.6245 7.04088C13.6245 6.79538 13.2449 6.55519 12.8052 6.27729C12.5003 6.0924 12.2073 5.88834 11.9279 5.6663C11.6351 5.40812 11.3617 5.12856 11.1098 4.82989C10.5952 4.2513 10.0627 3.65281 9.4861 3.57652C9.45812 3.57301 9.42993 3.57128 9.40173 3.57137C8.41792 3.57137 5.63846 5.45046 5.38961 6.5185C5.24967 7.12092 5.57437 7.53666 5.98617 8.06279C6.37598 8.56321 6.81811 9.12894 7.02555 10.0129Z"
          fill="#359CEF"
        />
        <path
          d="M12.8136 14.5509C12.7795 14.5509 12.7454 14.5504 12.7113 14.5494C11.864 14.5319 11.0578 14.1786 10.4682 13.5664C9.8785 12.9542 9.55304 12.1325 9.56259 11.2802C9.57214 10.4279 9.91592 9.61377 10.5191 9.01506C11.1224 8.41635 11.9362 8.08148 12.7837 8.08322H12.8562C13.4918 8.0974 14.1091 8.30082 14.6298 8.66779C15.1505 9.03476 15.5514 9.54878 15.7817 10.1449C16.012 10.741 16.0614 11.3923 15.9237 12.0167C15.7859 12.641 15.4672 13.2102 15.0079 13.6524C14.4199 14.2267 13.6332 14.5489 12.8136 14.5509ZM12.7846 8.69881C12.0984 8.69766 11.4395 8.96914 10.9513 9.45415C10.4631 9.93916 10.185 10.5984 10.1777 11.2886C10.1703 11.9787 10.4343 12.6439 10.912 13.1393C11.3898 13.6347 12.0428 13.9203 12.7288 13.9339C13.0709 13.9442 13.4115 13.8853 13.7305 13.7606C14.0494 13.6359 14.3402 13.448 14.5855 13.2081C14.9574 12.8501 15.2154 12.3893 15.3269 11.8839C15.4384 11.3785 15.3985 10.8512 15.2121 10.3686C15.0257 9.88601 14.7012 9.46984 14.2797 9.17272C13.8581 8.87561 13.3585 8.71089 12.8439 8.69935L12.7846 8.69881Z"
          fill="#359CEF"
        />
        <path
          d="M3.23654 14.5173C3.20245 14.5173 3.16836 14.5173 3.13427 14.5156C2.28956 14.4943 1.48716 14.1393 0.900649 13.5275C0.314134 12.9157 -0.00933749 12.0963 0.000205298 11.2465C0.00974809 10.3967 0.351537 9.58481 0.95164 8.98651C1.55174 8.3882 2.36191 8.05157 3.20688 8.04943H3.27915C3.91482 8.06357 4.53206 8.26694 5.0528 8.63389C5.57355 9.00083 5.97442 9.51487 6.20473 10.111C6.43504 10.7071 6.48445 11.3584 6.3467 11.9828C6.20895 12.6071 5.89024 13.1763 5.43086 13.6185C4.84302 14.193 4.0562 14.5153 3.23654 14.5173ZM3.20756 8.66503C2.52134 8.66383 1.86241 8.93529 1.37417 9.42028C0.885917 9.90528 0.607856 10.5645 0.600485 11.2547C0.593115 11.9449 0.857032 12.6101 1.33481 13.1055C1.81259 13.6009 2.46557 13.8865 3.15166 13.9001C3.49374 13.9107 3.83444 13.8519 4.15345 13.7272C4.47246 13.6026 4.76325 13.4146 5.00849 13.1745C5.38045 12.8166 5.63853 12.3557 5.7501 11.8503C5.86167 11.3449 5.82172 10.8175 5.6353 10.3349C5.44888 9.85227 5.12437 9.43609 4.70279 9.13898C4.28122 8.84188 3.78151 8.6772 3.26688 8.66574L3.20756 8.66503Z"
          fill="#359CEF"
        />
        <path
          d="M11.4457 2.39551L11.5402 3.90959C11.5465 4.06561 11.6025 4.21547 11.7 4.337C11.8642 4.5321 12.188 4.69357 12.7899 4.31984C12.8386 4.28899 12.8836 4.25262 12.9242 4.21148L13.8008 3.33171C13.9631 3.17496 14.0727 2.97118 14.1144 2.7488C14.1749 2.38468 14.0587 1.86644 13.187 1.43065C13.1207 1.39949 13.0494 1.38042 12.9765 1.37427C12.7293 1.31061 12.4688 1.32171 12.2279 1.40625C11.9869 1.49078 11.7761 1.64498 11.6218 1.84948C11.4962 2.00232 11.4332 2.1976 11.4457 2.39551Z"
          fill="#359CEF"
        />
      </svg>
    );
};

const Workout: React.FC<{ workout: Workout }> = ({ workout }) => {
  const {
    description,
    endTime,
    startTime,
    gPerHour,
    mod,
    popupType,
    workoutType,
    trackedCalories,
    trackedCarbs,
    trackedFat,
    trackedProtein,
    trackedTime,
    isTracked,
  } = workout;

  const displayTime = (targetTime: string) =>
    targetTime.split(":").slice(0, 2).join(":");

  return (
    <div className="m-2">
      <div
        className={`overflow-hidden rounded-lg bg-gray-back board-item-content-container mx-auto`}
      >
        <div className="flex w-full items-center p-2 gap-2">
          <WorkoutImage workoutType={workoutType} />
          <span className="text-sm text-white capitalize font-bold">
            {workoutType}
          </span>
        </div>

        <p className="text-xs text-white line-clamp-2 px-2">{description}</p>

        <p className="text-xs text-white line-clamp-2 my-2 px-2">
          {`${displayTime(startTime)} - ${displayTime(endTime)}`}
        </p>

        <div className="bg-gray-back-2 w-full">
          <div className="flex w-full items-center gap-2 p-2">
            <span className="text-sm text-white capitalize">Mod</span>
            <ModIcon />
          </div>
        </div>

        {popupType !== "min" && (
          <div className="bg-gray-back-2 p-2">
            <div className="w-full border-2 bg-gray-back rounded-lg border-light-blue p-1 flex items-center justify-center">
              <span className="text-xs">{`${gPerHour} g/hr`}</span>
            </div>
          </div>
        )}

        {isTracked && (
          <>
            <div className="bg-gray-back p-2 w-full">
              <div className="flex w-full justify-between items-center">
                <span className="text-xs text-white">{`${trackedCalories} Kcal`}</span>
                <span className="text-xs text-white">{trackedTime}</span>
              </div>

              <div className="flex w-full justify-between items-center mt-1">
                <span className="text-xs text-white">{`${trackedCarbs}g C`}</span>
                <div className="w-0.5 h-0.5 bg-white rounded-full" />
                <span className="text-xs text-white">{`${trackedProtein}g P`}</span>
                <div className="w-0.5 h-0.5 bg-white rounded-full" />
                <span className="text-xs text-white">{`${trackedFat}g F`}</span>
              </div>
            </div>
            <div className={`h-1 bg-workout-bottom w-full`}></div>
          </>
        )}
      </div>
    </div>
  );
};

export default React.memo(Workout);
